<IfModule mod_ssl.c>
	<VirtualHost _default_:443>
		ServerAdmin webmaster@localhost
		DocumentRoot /var/www/html
		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined

		SSLEngine on
                SSLProtocol -all +TLSv1.2
                SSLCipherSuite HIGH:!aNULL:!MD5:!3DES
                SSLHonorCipherOrder on
		SSLCertificateFile /etc/apache2/certs/${SERVERCRT_FILE}
		SSLCertificateKeyFile /etc/apache2/certs/${SERVERKEY_FILE}

                Header always set Content-Security-Policy "default-src 'self';"
                Header always set Strict-Transport-Security "max-age=3156000; includeSubDomains"
                Header always set X-XSS-Protection "1; mode=block"
                Header always set X-Frame-Options "SAMEORIGIN"
                Header always set X-Content-Type "nosniff"
                Header always set Referrer-Policy "strict-origin"

                Header always unset X-Powered-By

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>

		<Directory /usr/lib/cgi-bin>
				SSLOptions +StdEnvVars
		</Directory>
                <Directory "/var/www/html">
                    AuthType Basic
                    AuthName "Authorization required. Access restricted."
                    AuthUserFile /var/www/.gargoyle.htpasswd
                    Require valid-user

                    Options FollowSymLinks
                    AllowOverride All
                </Directory>

		#   SSL Protocol Adjustments:
		#   The safe and default but still SSL/TLS standard compliant shutdown
		#   approach is that mod_ssl sends the close notify alert but doesn't wait for
		#   the close notify alert from client. When you need a different shutdown
		#   approach you can use one of the following variables:
		#   o ssl-unclean-shutdown:
		#	 This forces an unclean shutdown when the connection is closed, i.e. no
		#	 SSL close notify alert is send or allowed to received.  This violates
		#	 the SSL/TLS standard but is needed for some brain-dead browsers. Use
		#	 this when you receive I/O errors because of the standard approach where
		#	 mod_ssl sends the close notify alert.
		#   o ssl-accurate-shutdown:
		#	 This forces an accurate shutdown when the connection is closed, i.e. a
		#	 SSL close notify alert is send and mod_ssl waits for the close notify
		#	 alert of the client. This is 100% SSL/TLS standard compliant, but in
		#	 practice often causes hanging connections with brain-dead browsers. Use
		#	 this only for browsers where you know that their SSL implementation
		#	 works correctly.
		#   Notice: Most problems of broken clients are also related to the HTTP
		#   keep-alive facility, so you usually additionally want to disable
		#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
		#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
		#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
		#   "force-response-1.0" for this.
		# BrowserMatch "MSIE [2-6]" \
		#		nokeepalive ssl-unclean-shutdown \
		#		downgrade-1.0 force-response-1.0

	</VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
