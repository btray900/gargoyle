version: '3'

services:

  elastic:
    build:
      context: ./elastic
      args:
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE} 
    container_name: ${ELASTIC_HOST}
    hostname: ${ELASTIC_HOST}
    image: ${ELASTIC_HOST}
    env_file:
      - ${ENV_FILE}
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m -Des.http.cname_in_publish_address=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      gargoyle:
        ipv4_address: ${ELASTIC_IP}
    ports:
      - "${ELASTIC_FRONTPORT}:${ELASTIC_BACKPORT}"
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    volumes:
      - g-elastic_v2:/opt/es_data
    restart: "no"


  kibana:
    build:
      context: ./kibana
      args:
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE} 
    container_name: ${KIBANA_HOST}
    hostname: ${KIBANA_HOST}
    image: ${KIBANA_HOST}
    env_file:
      - ${ENV_FILE}
    networks:
      gargoyle:
        ipv4_address: ${KIBANA_IP}
    ports:
      - "${KIBANA_FRONTPORT}:${KIBANA_BACKPORT}"
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    restart: "no"


  db:
    build: 
      context: ./db
      args:
        - dbuser=${DB_USER}
        - dbpass=${DB_PW}
        - dbdatabase=${DB_DATABASE}
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE}
    container_name: ${DB_HOST}
    image: ${DB_HOST}
    hostname: ${DB_HOST}
    env_file:
      - ${ENV_FILE}
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PW}
    networks:
      gargoyle:
        ipv4_address: ${DB_IP}
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    restart: "no"


  api:
    build:
      context: ./api
      args:
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE}
    container_name: ${API_HOST}
    hostname: ${API_HOST}
    image: ${API_HOST}
    env_file:
      - ${ENV_FILE}
    networks:
      gargoyle:
        ipv4_address: ${API_IP}
    ports:
      - "${API_FRONTPORT}:${API_BACKPORT}"
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    restart: "no"


  apache:
    build: 
      context: ./apache
      args:
        - frontuser=${APACHE_USER}
        - frontpw=${APACHE_PW}
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE}
    container_name: ${APACHE_HOST}
    hostname: ${APACHE_HOST}
    image: ${APACHE_HOST}
    env_file:
      - ${ENV_FILE}
    networks:
      gargoyle:
        ipv4_address: ${APACHE_IP}
    ports:
      - "${APACHE_FRONTPORT}:${APACHE_BACKPORT}"
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    restart: "no"


  engine:
    build:
      context: ./engine
      args:
        - cacrt=${CACRT_FILE}
        - servercrt=${SERVERCRT_FILE}
        - serverkey=${SERVERKEY_FILE}
        - clientcrt=${CLIENTCRT_FILE}
        - clientkey=${CLIENTKEY_FILE}
    container_name: ${ENGINE_HOST}
    hostname: ${ENGINE_HOST}
    image: ${ENGINE_HOST}
    env_file:
      - ${ENV_FILE}
    networks:
      gargoyle:
        ipv4_address: ${ENGINE_IP}
    extra_hosts:
      - "${ELASTIC_HOST}:${ELASTIC_IP}"
      - "${KIBANA_HOST}:${KIBANA_IP}"
      - "${DB_HOST}:${DB_IP}"
      - "${API_HOST}:${API_IP}"
      - "${APACHE_HOST}:${APACHE_IP}"
      - "${ENGINE_HOST}:${ENGINE_IP}"
    volumes:
      - g-engine_v2:/var/log/gargoyle
    restart: "no"


networks:
  gargoyle:
    ipam:
      config:
        - subnet: ${G_NETWORK}


volumes:

  g-elastic_v2:
    external: true

  g-engine_v2:
    external: true
